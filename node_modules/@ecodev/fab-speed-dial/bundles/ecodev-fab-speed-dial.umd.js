(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/material')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/material'], factory) :
	(factory((global.ecodev = global.ecodev || {}, global.ecodev['fab-speed-dial'] = {}),global.ng.core,global.ng.common,global.ng.material));
}(this, (function (exports,core,common,material) { 'use strict';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var Z_INDEX_ITEM = 23;
var EcoFabSpeedDialActionsComponent = /** @class */ (function () {
    /**
     * @param {?} injector
     * @param {?} renderer
     */
    function EcoFabSpeedDialActionsComponent(injector, renderer) {
        this.renderer = renderer;
        this._parent = injector.get(EcoFabSpeedDialComponent);
    }
    /**
     * @return {?}
     */
    EcoFabSpeedDialActionsComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        this._buttons.changes.subscribe(function () {
            _this.initButtonStates();
            _this._parent.setActionsVisibility();
        });
        this.initButtonStates();
    };
    /**
     * @return {?}
     */
    EcoFabSpeedDialActionsComponent.prototype.initButtonStates = function () {
        var _this = this;
        this._buttons.toArray().forEach(function (button, i) {
            _this.renderer.addClass(button._getHostElement(), 'eco-fab-action-item');
            _this.changeElementStyle(button._getHostElement(), 'z-index', '' + (Z_INDEX_ITEM - i));
        });
    };
    /**
     * @return {?}
     */
    EcoFabSpeedDialActionsComponent.prototype.show = function () {
        var _this = this;
        if (this._buttons) {
            this._buttons.toArray().forEach(function (button, i) {
                var /** @type {?} */ transitionDelay = 0;
                var /** @type {?} */ transform;
                if (_this._parent.animationMode === 'scale') {
                    // Incremental transition delay of 65ms for each action button
                    transitionDelay = 3 + (65 * i);
                    transform = 'scale(1)';
                }
                else {
                    transform = _this.getTranslateFunction('0');
                }
                _this.changeElementStyle(button._getHostElement(), 'transition-delay', transitionDelay + 'ms');
                _this.changeElementStyle(button._getHostElement(), 'opacity', '1');
                _this.changeElementStyle(button._getHostElement(), 'transform', transform);
            });
        }
    };
    /**
     * @return {?}
     */
    EcoFabSpeedDialActionsComponent.prototype.hide = function () {
        var _this = this;
        if (this._buttons) {
            this._buttons.toArray().forEach(function (button, i) {
                var /** @type {?} */ opacity = '1';
                var /** @type {?} */ transitionDelay = 0;
                var /** @type {?} */ transform;
                if (_this._parent.animationMode === 'scale') {
                    transitionDelay = 3 - (65 * i);
                    transform = 'scale(0)';
                    opacity = '0';
                }
                else {
                    transform = _this.getTranslateFunction((55 * (i + 1) - (i * 5)) + 'px');
                }
                _this.changeElementStyle(button._getHostElement(), 'transition-delay', transitionDelay + 'ms');
                _this.changeElementStyle(button._getHostElement(), 'opacity', opacity);
                _this.changeElementStyle(button._getHostElement(), 'transform', transform);
            });
        }
    };
    /**
     * @param {?} value
     * @return {?}
     */
    EcoFabSpeedDialActionsComponent.prototype.getTranslateFunction = function (value) {
        var /** @type {?} */ dir = this._parent.direction;
        var /** @type {?} */ translateFn = (dir === 'up' || dir === 'down') ? 'translateY' : 'translateX';
        var /** @type {?} */ sign = (dir === 'down' || dir === 'right') ? '-' : '';
        return translateFn + '(' + sign + value + ')';
    };
    /**
     * @param {?} elem
     * @param {?} style
     * @param {?} value
     * @return {?}
     */
    EcoFabSpeedDialActionsComponent.prototype.changeElementStyle = function (elem, style, value) {
        // FIXME - Find a way to create a "wrapper" around the action button(s) provided by the user, so we don't change it's style tag
        this.renderer.setStyle(elem, style, value);
    };
    return EcoFabSpeedDialActionsComponent;
}());
EcoFabSpeedDialActionsComponent.decorators = [
    { type: core.Component, args: [{
                selector: 'eco-fab-speed-dial-actions',
                template: "\n        <ng-content select=\"[mat-mini-fab]\"></ng-content>",
            },] },
];
/** @nocollapse */
EcoFabSpeedDialActionsComponent.ctorParameters = function () { return [
    { type: core.Injector, },
    { type: core.Renderer2, },
]; };
EcoFabSpeedDialActionsComponent.propDecorators = {
    "_buttons": [{ type: core.ContentChildren, args: [material.MatButton,] },],
};
var EcoFabSpeedDialComponent = /** @class */ (function () {
    /**
     * @param {?} elementRef
     * @param {?} renderer
     */
    function EcoFabSpeedDialComponent(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.isInitialized = false;
        this._direction = 'up';
        this._open = false;
        this._animationMode = 'fling';
        /**
         * Whether this speed dial is fixed on screen (user cannot change it by clicking)
         */
        this.fixed = false;
        this.openChange = new core.EventEmitter();
    }
    Object.defineProperty(EcoFabSpeedDialComponent.prototype, "open", {
        /**
         * Whether this speed dial is opened
         * @return {?}
         */
        get: function () {
            return this._open;
        },
        /**
         * @param {?} open
         * @return {?}
         */
        set: function (open) {
            var /** @type {?} */ previousOpen = this._open;
            this._open = open;
            if (previousOpen !== this._open) {
                this.openChange.emit(this._open);
                if (this.isInitialized) {
                    this.setActionsVisibility();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EcoFabSpeedDialComponent.prototype, "direction", {
        /**
         * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'
         * @return {?}
         */
        get: function () {
            return this._direction;
        },
        /**
         * @param {?} direction
         * @return {?}
         */
        set: function (direction) {
            var /** @type {?} */ previousDirection = this._direction;
            this._direction = direction;
            if (previousDirection !== this.direction) {
                this._setElementClass(previousDirection, false);
                this._setElementClass(this.direction, true);
                if (this.isInitialized) {
                    this.setActionsVisibility();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EcoFabSpeedDialComponent.prototype, "animationMode", {
        /**
         * The animation mode to open the speed dial. Can be 'fling' or 'scale'
         * @return {?}
         */
        get: function () {
            return this._animationMode;
        },
        /**
         * @param {?} animationMode
         * @return {?}
         */
        set: function (animationMode) {
            var _this = this;
            var /** @type {?} */ previousAnimationMode = this._animationMode;
            this._animationMode = animationMode;
            if (previousAnimationMode !== this._animationMode) {
                this._setElementClass(previousAnimationMode, false);
                this._setElementClass(this.animationMode, true);
                if (this.isInitialized) {
                    // To start another detect lifecycle and force the "close" on the action buttons
                    Promise.resolve(null).then(function () { return _this.open = false; });
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    EcoFabSpeedDialComponent.prototype.ngAfterContentInit = function () {
        this.isInitialized = true;
        this.setActionsVisibility();
        this._setElementClass(this.direction, true);
        this._setElementClass(this.animationMode, true);
    };
    /**
     * Toggle the open state of this speed dial
     * @return {?}
     */
    EcoFabSpeedDialComponent.prototype.toggle = function () {
        this.open = !this.open;
    };
    /**
     * @return {?}
     */
    EcoFabSpeedDialComponent.prototype._onClick = function () {
        if (!this.fixed && this.open) {
            this.open = false;
        }
    };
    /**
     * @return {?}
     */
    EcoFabSpeedDialComponent.prototype.setActionsVisibility = function () {
        if (this.open) {
            this._childActions.show();
        }
        else {
            this._childActions.hide();
        }
    };
    /**
     * @param {?} elemClass
     * @param {?} isAdd
     * @return {?}
     */
    EcoFabSpeedDialComponent.prototype._setElementClass = function (elemClass, isAdd) {
        var /** @type {?} */ finalClass = "eco-" + elemClass;
        if (isAdd) {
            this.renderer.addClass(this.elementRef.nativeElement, finalClass);
        }
        else {
            this.renderer.removeClass(this.elementRef.nativeElement, finalClass);
        }
    };
    return EcoFabSpeedDialComponent;
}());
EcoFabSpeedDialComponent.decorators = [
    { type: core.Component, args: [{
                selector: 'eco-fab-speed-dial',
                template: "\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\"></ng-content>\n            <ng-content select=\"eco-fab-speed-dial-actions\"></ng-content>\n        </div>\n    ",
                styles: ["eco-fab-speed-dial {\n  display: inline-block; }\n  eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg); }\n  eco-fab-speed-dial .eco-fab-speed-dial-container {\n    position: relative;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n        align-items: center;\n    z-index: 20; }\n    eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger {\n      pointer-events: auto;\n      z-index: 24; }\n      eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin {\n        -webkit-transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n        transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1); }\n    eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      height: auto; }\n  eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n    display: block;\n    opacity: 1;\n    -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);\n    transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2); }\n  eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n    -webkit-transform: scale(0);\n    transform: scale(0);\n    -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);\n    transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);\n    -webkit-transition-duration: .14286s;\n    transition-duration: .14286s; }\n  eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n        flex-direction: column; }\n    eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger {\n      -webkit-box-ordinal-group: 2;\n      -ms-flex-order: 1;\n          order: 1; }\n    eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions {\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n      -webkit-box-ordinal-group: 3;\n      -ms-flex-order: 2;\n          order: 2; }\n      eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n        margin-top: 10px; }\n  eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n        flex-direction: column; }\n    eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger {\n      -webkit-box-ordinal-group: 3;\n      -ms-flex-order: 2;\n          order: 2; }\n    eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions {\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: reverse;\n      -ms-flex-direction: column-reverse;\n          flex-direction: column-reverse;\n      -webkit-box-ordinal-group: 2;\n      -ms-flex-order: 1;\n          order: 1; }\n      eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n        margin-bottom: 10px; }\n  eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n        flex-direction: row; }\n    eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger {\n      -webkit-box-ordinal-group: 3;\n      -ms-flex-order: 2;\n          order: 2; }\n    eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions {\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n      -ms-flex-direction: row-reverse;\n          flex-direction: row-reverse;\n      -webkit-box-ordinal-group: 2;\n      -ms-flex-order: 1;\n          order: 1; }\n      eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n        margin-right: 10px; }\n  eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n        flex-direction: row; }\n    eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger {\n      -webkit-box-ordinal-group: 2;\n      -ms-flex-order: 1;\n          order: 1; }\n    eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions {\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n      -webkit-box-ordinal-group: 3;\n      -ms-flex-order: 2;\n          order: 2; }\n      eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n        margin-left: 10px; }\n"],
                encapsulation: core.ViewEncapsulation.None,
            },] },
];
/** @nocollapse */
EcoFabSpeedDialComponent.ctorParameters = function () { return [
    { type: core.ElementRef, },
    { type: core.Renderer2, },
]; };
EcoFabSpeedDialComponent.propDecorators = {
    "fixed": [{ type: core.Input },],
    "open": [{ type: core.HostBinding, args: ['class.eco-opened',] }, { type: core.Input },],
    "direction": [{ type: core.Input },],
    "animationMode": [{ type: core.Input },],
    "openChange": [{ type: core.Output },],
    "_childActions": [{ type: core.ContentChild, args: [EcoFabSpeedDialActionsComponent,] },],
    "_onClick": [{ type: core.HostListener, args: ['click',] },],
};
var EcoFabSpeedDialTriggerComponent = /** @class */ (function () {
    /**
     * @param {?} injector
     */
    function EcoFabSpeedDialTriggerComponent(injector) {
        this.spin = false;
        this._parent = injector.get(EcoFabSpeedDialComponent);
    }
    Object.defineProperty(EcoFabSpeedDialTriggerComponent.prototype, "sp", {
        /**
         * Whether this trigger should spin (360dg) while opening the speed dial
         * @return {?}
         */
        get: function () {
            return this.spin;
        },
        enumerable: true,
        configurable: true
    });
    
    /**
     * @param {?} event
     * @return {?}
     */
    EcoFabSpeedDialTriggerComponent.prototype._onClick = function (event) {
        if (!this._parent.fixed) {
            this._parent.toggle();
            event.stopPropagation();
        }
    };
    return EcoFabSpeedDialTriggerComponent;
}());
EcoFabSpeedDialTriggerComponent.decorators = [
    { type: core.Component, args: [{
                selector: 'eco-fab-speed-dial-trigger',
                template: "\n        <ng-content select=\"[mat-fab]\"></ng-content>",
            },] },
];
/** @nocollapse */
EcoFabSpeedDialTriggerComponent.ctorParameters = function () { return [
    { type: core.Injector, },
]; };
EcoFabSpeedDialTriggerComponent.propDecorators = {
    "sp": [{ type: core.HostBinding, args: ['class.eco-spin',] },],
    "spin": [{ type: core.Input },],
    "_onClick": [{ type: core.HostListener, args: ['click', ['$event'],] },],
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var EcoFabSpeedDialModule = /** @class */ (function () {
    function EcoFabSpeedDialModule() {
    }
    return EcoFabSpeedDialModule;
}());
EcoFabSpeedDialModule.decorators = [
    { type: core.NgModule, args: [{
                imports: [common.CommonModule],
                declarations: [
                    EcoFabSpeedDialActionsComponent,
                    EcoFabSpeedDialComponent,
                    EcoFabSpeedDialTriggerComponent,
                ],
                exports: [
                    EcoFabSpeedDialActionsComponent,
                    EcoFabSpeedDialComponent,
                    EcoFabSpeedDialTriggerComponent,
                ],
            },] },
];
/** @nocollapse */
EcoFabSpeedDialModule.ctorParameters = function () { return []; };

exports.EcoFabSpeedDialModule = EcoFabSpeedDialModule;
exports.ɵa = EcoFabSpeedDialActionsComponent;
exports.ɵb = EcoFabSpeedDialComponent;
exports.ɵc = EcoFabSpeedDialTriggerComponent;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ecodev-fab-speed-dial.umd.js.map
