{
  "version": 3,
  "file": "ecodev-fab-speed-dial.umd.js",
  "sources": [
    "ng://@ecodev/fab-speed-dial/src/fab-speed-dial/fab-speed-dial.ts"
  ],
  "sourcesContent": [
    "import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    ViewEncapsulation,\n    AfterContentInit,\n    ElementRef,\n    Renderer2,\n    ContentChild,\n    HostBinding,\n    HostListener, Injector, QueryList, ContentChildren,\n} from '@angular/core';\nimport { MatButton } from '@angular/material';\n\nconst Z_INDEX_ITEM: number = 23;\n\nexport type Direction = 'up' | 'down' | 'left' | 'right';\nexport type AnimationMode = 'fling' | 'scale';\n\n@Component({\n    selector: 'eco-fab-speed-dial-actions',\n    template: `\n        <ng-content select=\"[mat-mini-fab]\"></ng-content>`,\n})\nexport class EcoFabSpeedDialActionsComponent implements AfterContentInit {\n    private _parent: EcoFabSpeedDialComponent;\n\n    @ContentChildren(MatButton) _buttons: QueryList<MatButton>;\n\n    constructor(injector: Injector, private renderer: Renderer2) {\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n\n    ngAfterContentInit(): void {\n        this._buttons.changes.subscribe(() => {\n            this.initButtonStates();\n            this._parent.setActionsVisibility();\n        });\n\n        this.initButtonStates();\n    }\n\n    private initButtonStates() {\n        this._buttons.toArray().forEach((button, i) => {\n            this.renderer.addClass(button._getHostElement(), 'eco-fab-action-item');\n            this.changeElementStyle(button._getHostElement(), 'z-index', '' + (Z_INDEX_ITEM - i));\n        })\n    }\n\n    show() {\n        if (this._buttons) {\n            this._buttons.toArray().forEach((button, i) => {\n                let transitionDelay = 0;\n                let transform;\n                if (this._parent.animationMode === 'scale') {\n                    // Incremental transition delay of 65ms for each action button\n                    transitionDelay = 3 + (65 * i);\n                    transform = 'scale(1)';\n                } else {\n                    transform = this.getTranslateFunction('0');\n                }\n                this.changeElementStyle(button._getHostElement(), 'transition-delay', transitionDelay + 'ms');\n                this.changeElementStyle(button._getHostElement(), 'opacity', '1');\n                this.changeElementStyle(button._getHostElement(), 'transform', transform);\n            })\n        }\n    }\n\n    hide() {\n        if (this._buttons) {\n            this._buttons.toArray().forEach((button, i) => {\n                let opacity = '1';\n                let transitionDelay = 0;\n                let transform;\n                if (this._parent.animationMode === 'scale') {\n                    transitionDelay = 3 - (65 * i);\n                    transform = 'scale(0)';\n                    opacity = '0';\n                } else {\n                    transform = this.getTranslateFunction((55 * (i + 1) - (i * 5)) + 'px');\n                }\n                this.changeElementStyle(button._getHostElement(), 'transition-delay', transitionDelay + 'ms');\n                this.changeElementStyle(button._getHostElement(), 'opacity', opacity);\n                this.changeElementStyle(button._getHostElement(), 'transform', transform);\n            })\n        }\n    }\n\n    private getTranslateFunction(value: string) {\n        let dir = this._parent.direction;\n        let translateFn = (dir === 'up' || dir === 'down') ? 'translateY' : 'translateX';\n        let sign = (dir === 'down' || dir === 'right') ? '-' : '';\n        return translateFn + '(' + sign + value + ')';\n    }\n\n    private changeElementStyle(elem: any, style: string, value: string) {\n        // FIXME - Find a way to create a \"wrapper\" around the action button(s) provided by the user, so we don't change it's style tag\n        this.renderer.setStyle(elem, style, value);\n    }\n}\n\n@Component({\n    selector: 'eco-fab-speed-dial',\n    template: `\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\"></ng-content>\n            <ng-content select=\"eco-fab-speed-dial-actions\"></ng-content>\n        </div>\n    `,\n    styles: [`eco-fab-speed-dial {\n  display: inline-block; }\n  eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg); }\n  eco-fab-speed-dial .eco-fab-speed-dial-container {\n    position: relative;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n        align-items: center;\n    z-index: 20; }\n    eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger {\n      pointer-events: auto;\n      z-index: 24; }\n      eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin {\n        -webkit-transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n        transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1); }\n    eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      height: auto; }\n  eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n    display: block;\n    opacity: 1;\n    -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);\n    transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2); }\n  eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n    -webkit-transform: scale(0);\n    transform: scale(0);\n    -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);\n    transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);\n    -webkit-transition-duration: .14286s;\n    transition-duration: .14286s; }\n  eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n        flex-direction: column; }\n    eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger {\n      -webkit-box-ordinal-group: 2;\n      -ms-flex-order: 1;\n          order: 1; }\n    eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions {\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n      -webkit-box-ordinal-group: 3;\n      -ms-flex-order: 2;\n          order: 2; }\n      eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n        margin-top: 10px; }\n  eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n        flex-direction: column; }\n    eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger {\n      -webkit-box-ordinal-group: 3;\n      -ms-flex-order: 2;\n          order: 2; }\n    eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions {\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: reverse;\n      -ms-flex-direction: column-reverse;\n          flex-direction: column-reverse;\n      -webkit-box-ordinal-group: 2;\n      -ms-flex-order: 1;\n          order: 1; }\n      eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n        margin-bottom: 10px; }\n  eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n        flex-direction: row; }\n    eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger {\n      -webkit-box-ordinal-group: 3;\n      -ms-flex-order: 2;\n          order: 2; }\n    eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions {\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n      -ms-flex-direction: row-reverse;\n          flex-direction: row-reverse;\n      -webkit-box-ordinal-group: 2;\n      -ms-flex-order: 1;\n          order: 1; }\n      eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n        margin-right: 10px; }\n  eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n        flex-direction: row; }\n    eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger {\n      -webkit-box-ordinal-group: 2;\n      -ms-flex-order: 1;\n          order: 1; }\n    eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions {\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n      -webkit-box-ordinal-group: 3;\n      -ms-flex-order: 2;\n          order: 2; }\n      eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item {\n        margin-left: 10px; }\n`],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class EcoFabSpeedDialComponent implements AfterContentInit {\n    private isInitialized: boolean = false;\n    private _direction: Direction = 'up';\n    private _open: boolean = false;\n    private _animationMode: AnimationMode = 'fling';\n\n    /**\n     * Whether this speed dial is fixed on screen (user cannot change it by clicking)\n     */\n    @Input() fixed: boolean = false;\n\n    /**\n     * Whether this speed dial is opened\n     */\n    @HostBinding('class.eco-opened')\n    @Input() get open(): boolean {\n        return this._open;\n    }\n\n    set open(open: boolean) {\n        let previousOpen = this._open;\n        this._open = open;\n        if (previousOpen !== this._open) {\n            this.openChange.emit(this._open);\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n\n    /**\n     * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'\n     */\n    @Input() get direction(): Direction {\n        return this._direction;\n    }\n\n    set direction(direction: Direction) {\n        let previousDirection = this._direction;\n        this._direction = direction;\n        if (previousDirection !== this.direction) {\n            this._setElementClass(previousDirection, false);\n            this._setElementClass(this.direction, true);\n\n            if (this.isInitialized) {\n                this.setActionsVisibility();\n            }\n        }\n    }\n\n    /**\n     * The animation mode to open the speed dial. Can be 'fling' or 'scale'\n     */\n    @Input() get animationMode(): AnimationMode {\n        return this._animationMode;\n    }\n\n    set animationMode(animationMode: AnimationMode) {\n        let previousAnimationMode = this._animationMode;\n        this._animationMode = animationMode;\n        if (previousAnimationMode !== this._animationMode) {\n            this._setElementClass(previousAnimationMode, false);\n            this._setElementClass(this.animationMode, true);\n\n            if (this.isInitialized) {\n                // To start another detect lifecycle and force the \"close\" on the action buttons\n                Promise.resolve(null).then(() => this.open = false);\n            }\n        }\n    }\n\n    @Output() openChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    @ContentChild(EcoFabSpeedDialActionsComponent) _childActions: EcoFabSpeedDialActionsComponent;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    }\n\n    ngAfterContentInit(): void {\n        this.isInitialized = true;\n        this.setActionsVisibility();\n        this._setElementClass(this.direction, true);\n        this._setElementClass(this.animationMode, true);\n    }\n\n    /**\n     * Toggle the open state of this speed dial\n     */\n    public toggle(): void {\n        this.open = !this.open;\n    }\n\n    @HostListener('click')\n    _onClick(): void {\n        if (!this.fixed && this.open) {\n            this.open = false;\n        }\n    }\n\n    setActionsVisibility(): void {\n        if (this.open) {\n            this._childActions.show();\n        } else {\n            this._childActions.hide();\n        }\n    }\n\n    private _setElementClass(elemClass: string, isAdd: boolean): void {\n        const finalClass = `eco-${elemClass}`;\n        if (isAdd) {\n            this.renderer.addClass(this.elementRef.nativeElement, finalClass);\n        } else {\n            this.renderer.removeClass(this.elementRef.nativeElement, finalClass);\n        }\n    }\n}\n\n@Component({\n    selector: 'eco-fab-speed-dial-trigger',\n    template: `\n        <ng-content select=\"[mat-fab]\"></ng-content>`,\n})\nexport class EcoFabSpeedDialTriggerComponent {\n    private _parent: EcoFabSpeedDialComponent;\n\n    /**\n     * Whether this trigger should spin (360dg) while opening the speed dial\n     */\n    @HostBinding('class.eco-spin') get sp() {\n        return this.spin;\n    };\n\n    @Input() spin: boolean = false;\n\n    constructor(injector: Injector) {\n        this._parent = injector.get(EcoFabSpeedDialComponent);\n    }\n\n    @HostListener('click', ['$event'])\n    _onClick(event: any) {\n        if (!this._parent.fixed) {\n            this._parent.toggle();\n            event.stopPropagation();\n        }\n    }\n\n}\n"
  ],
  "names": [
    "Renderer2",
    "Component"
  ],
  "mappings": "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"
}
