{"__symbolic":"module","version":4,"metadata":{"DynamicMaterialFormComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ng-dynamic-forms/core","name":"DynamicFormComponent","line":17,"character":50},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"dynamic-material-form","template":"<dynamic-material-form-control *ngFor=\"let model of formModel; trackBy: trackByFn\" [group]=\"formGroup\" [hasErrorMessaging]=\"model.hasErrorMessages\" [hidden]=\"model.hidden\" [layout]=\"formLayout\" [model]=\"model\" [ngClass]=\"[getClass(model, 'element', 'host'), getClass(model, 'grid', 'host')]\" [showCharacterHint]=\"model.type === 'INPUT'\" [templates]=\"templates\" (dfBlur)=\"onEvent($event, 'blur')\" (dfChange)=\"onEvent($event, 'change')\" (dfFocus)=\"onEvent($event, 'focus')\" (matEvent)=\"onEvent($event, 'custom')\"></dynamic-material-form-control>"}]}],"members":{"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":5},"arguments":["group"]}]}],"formModel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":5},"arguments":["model"]}]}],"formLayout":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5},"arguments":["layout"]}]}],"blur":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":23,"character":5},"arguments":["dfBlur"]}]}],"change":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5},"arguments":["dfChange"]}]}],"focus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5},"arguments":["dfFocus"]}]}],"customEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":26,"character":5},"arguments":["matEvent"]}]}],"templates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren","line":28,"character":5},"arguments":[{"__symbolic":"reference","module":"@ng-dynamic-forms/core","name":"DynamicTemplateDirective","line":28,"character":21}]}]}],"components":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":30,"character":5},"arguments":[{"__symbolic":"reference","name":"DynamicMaterialFormControlComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ng-dynamic-forms/core","name":"DynamicFormService","line":32,"character":39},{"__symbolic":"reference","module":"@ng-dynamic-forms/core","name":"DynamicFormLayoutService","line":32,"character":84}]}]}},"MatFormControlType":{"Array":1,"Checkbox":2,"Chips":3,"DatePicker":4,"Group":5,"Input":6,"RadioGroup":7,"Select":8,"Slider":9,"SlideToggle":10,"TextArea":11},"MAT_VIEW_CHILD_SELECTOR":"matAutocomplete,matCheckbox,matDatepicker,matInput,matRadioGroup,matSelect,\n    matSlider,matSlideToggle,matTextarea","MAT_LABEL_POSITION_AFTER":"after","MAT_LABEL_POSITION_BEFORE":"before","MatFormControlComponent":{"__symbolic":"interface"},"DynamicMaterialFormControlComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ng-dynamic-forms/core","name":"DynamicFormControlComponent","line":58,"character":57},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":54,"character":1},"arguments":[{"selector":"dynamic-material-form-control,dynamic-form-material-control","template":"<div [formGroup]=\"group\" [ngClass]=\"[getClass('element', 'container'), getClass('grid', 'container')]\"><label *ngIf=\"model.label && !hasMatFormField && type !== 2\" [for]=\"model.id\" [innerHTML]=\"model.label\" [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></label><ng-container *ngTemplateOutlet=\"templates[0]?.templateRef; context: model\"></ng-container><ng-container [ngSwitch]=\"type\"><div *ngSwitchCase=\"1\" [dynamicId]=\"bindId && model.id\" [formArrayName]=\"model.id\" [ngClass]=\"[getClass('element', 'control'), getClass('grid', 'control')]\"><div *ngFor=\"let groupModel of model.groups; let idx = index\" role=\"group\" [formGroupName]=\"idx\" [ngClass]=\"[getClass('element', 'group'), getClass('grid', 'group')]\"><dynamic-material-form-control *ngFor=\"let _model of groupModel.group\" [bindId]=\"false\" [context]=\"groupModel\" [group]=\"control.at(idx)\" [hasErrorMessaging]=\"_model.hasErrorMessages\" [hidden]=\"_model.hidden\" [layout]=\"layout\" [model]=\"_model\" [templates]=\"templateList\" [ngClass]=\"[getClass('element', 'host', _model), getClass('grid', 'host', _model)]\" (dfBlur)=\"onBlur($event)\" (dfChange)=\"onValueChange($event)\" (dfFocus)=\"onFocus($event)\" (matEvent)=\"onCustomEvent($event)\"></dynamic-material-form-control><ng-container *ngTemplateOutlet=\"templates[2]?.templateRef; context: groupModel\"></ng-container></div></div><mat-checkbox *ngSwitchCase=\"2\" #matCheckbox [checked]=\"model.checked\" [formControlName]=\"model.id\" [id]=\"bindId ? model.id : null\" [indeterminate]=\"model.indeterminate\" [labelPosition]=\"model.labelPosition || 'after'\" [name]=\"model.name\" [ngClass]=\"[getClass('element', 'control'), getClass('grid', 'control')]\" (blur)=\"onBlur($event)\" (change)=\"onValueChange($event)\" (focus)=\"onFocus($event)\" (indeterminateChange)=\"onMatEvent($event, 'indeterminateChange')\"><span [ngClass]=\"getClass('element', 'label')\" [innerHTML]=\"model.label\"></span></mat-checkbox><mat-form-field *ngSwitchCase=\"3\" [color]=\"getAdditional('color', 'primary')\" [ngClass]=\"getClass('grid', 'control')\" [floatLabel]=\"getAdditional('floatLabel', 'auto')\"><mat-chip-list #matChipList [formControlName]=\"model.id\" [id]=\"bindId ? model.id : null\" [multiple]=\"true\"><mat-chip *ngFor=\"let chip of chipList; let index = index\" [selectable]=\"false\" (removed)=\"onChipRemoved(chip, index)\"><span>{{ chip }}</span><mat-icon matChipRemove>cancel</mat-icon></mat-chip><input matInput [placeholder]=\"model.placeholder\" [matChipInputFor]=\"matChipList\" [matChipInputAddOnBlur]=\"true\" [matChipInputSeparatorKeyCodes]=\"[13, 188]\" (matChipInputTokenEnd)=\"onChipInputTokenEnd($event)\"></mat-chip-list></mat-form-field><mat-form-field *ngSwitchCase=\"4\" [color]=\"getAdditional('color', 'primary')\" [ngClass]=\"getClass('grid', 'control')\" [floatLabel]=\"getAdditional('floatLabel', 'auto')\"><ng-container *ngIf=\"model.label\" ngProjectAs=\"mat-label\"><mat-label>{{ model.label }}</mat-label></ng-container><span *ngIf=\"model.prefix\" matPrefix [innerHTML]=\"model.prefix\"></span> <input matInput [autofocus]=\"model.autoFocus\" [formControlName]=\"model.id\" [id]=\"bindId ? model.id : null\" [max]=\"model.max\" [matDatepicker]=\"matDatepicker\" [min]=\"model.min\" [name]=\"model.name\" [ngClass]=\"getClass('element', 'control')\" [placeholder]=\"model.placeholder\" [readonly]=\"model.readOnly\" [required]=\"model.required\" (blur)=\"onBlur($event)\" (dateChange)=\"onValueChange($event)\" (dateInput)=\"onCustomEvent($event, 'dateInput')\" (focus)=\"onFocus($event)\"> <span *ngIf=\"model.suffix\" matSuffix [innerHTML]=\"model.suffix\"></span><mat-hint *ngIf=\"showHint\" align=\"start\" [innerHTML]=\"model.hint\"></mat-hint><mat-datepicker-toggle matSuffix [for]=\"matDatepicker\"></mat-datepicker-toggle><mat-datepicker #matDatepicker [opened]=\"getAdditional('opened', false)\" [startAt]=\"model.focusedDate\" [startView]=\"getAdditional('startView', 'month')\" [touchUi]=\"getAdditional('touchUi', false)\" (closed)=\"onCustomEvent($event, 'closed')\" (opened)=\"onCustomEvent($event, 'opened')\"></mat-datepicker><ng-container *ngFor=\"let message of errorMessages\" ngProjectAs=\"mat-error\"><mat-error *ngIf=\"hasErrorMessaging\">{{ message }}</mat-error></ng-container></mat-form-field><div *ngSwitchCase=\"5\" role=\"group\" [dynamicId]=\"bindId && model.id\" [formGroupName]=\"model.id\" [ngClass]=\"[getClass('element', 'control'), getClass('grid', 'control')]\"><dynamic-material-form-control *ngFor=\"let _model of model.group\" [group]=\"control\" [hasErrorMessaging]=\"_model.hasErrorMessages\" [hidden]=\"_model.hidden\" [layout]=\"layout\" [model]=\"_model\" [templates]=\"templateList\" [ngClass]=\"[getClass('element', 'host', _model), getClass('grid', 'host', _model)]\" (dfBlur)=\"onBlur($event)\" (dfChange)=\"onValueChange($event)\" (dfFocus)=\"onFocus($event)\" (matEvent)=\"onCustomEvent($event)\"></dynamic-material-form-control></div><ng-container *ngSwitchCase=\"6\"><mat-form-field [color]=\"getAdditional('color', 'primary')\" [ngClass]=\"getClass('grid','control')\" [floatLabel]=\"getAdditional('floatLabel', 'auto')\" [textMask]=\"{mask: (model.mask || false), showMask: model.mask && !(model.placeholder)}\"><ng-container *ngIf=\"model.label\" ngProjectAs=\"mat-label\"><mat-label>{{ model.label }}</mat-label></ng-container><span *ngIf=\"model.prefix\" matPrefix [innerHTML]=\"model.prefix\"></span> <input matInput [attr.accept]=\"model.accept\" [attr.list]=\"model.listId\" [attr.max]=\"model.max\" [attr.min]=\"model.min\" [attr.multiple]=\"model.multiple\" [attr.step]=\"model.step\" [autocomplete]=\"model.autoComplete\" [autofocus]=\"model.autoFocus\" [formControlName]=\"model.id\" [id]=\"bindId ? model.id : null\" [maxlength]=\"model.maxLength\" [matAutocomplete]=\"matAutocomplete\" [minlength]=\"model.minLength\" [name]=\"model.name\" [ngClass]=\"getClass('element', 'control')\" [pattern]=\"model.pattern\" [placeholder]=\"model.placeholder\" [readonly]=\"model.readOnly\" [required]=\"model.required\" [spellcheck]=\"model.spellCheck\" [tabindex]=\"model.tabIndex\" [type]=\"model.inputType\" (blur)=\"onBlur($event)\" (change)=\"onValueChange($event)\" (focus)=\"onFocus($event)\"> <span *ngIf=\"model.suffix\" matSuffix [innerHTML]=\"model.suffix\"></span><mat-hint *ngIf=\"showHint\" align=\"start\" [innerHTML]=\"model.hint\"></mat-hint><mat-hint *ngIf=\"showCharacterHint\" align=\"end\">{{ characterHint }}</mat-hint><ng-container *ngFor=\"let message of errorMessages\" ngProjectAs=\"mat-error\"><mat-error *ngIf=\"hasErrorMessaging\">{{ message }}</mat-error></ng-container></mat-form-field><mat-autocomplete #matAutocomplete=\"matAutocomplete\" (optionSelected)=\"onValueChange($event)\"><mat-option *ngFor=\"let option of model.list\" [value]=\"option\">{{ option }}</mat-option></mat-autocomplete></ng-container><mat-radio-group *ngSwitchCase=\"7\" #matRadioGroup [formControlName]=\"model.id\" [id]=\"bindId ? model.id : null\" [name]=\"model.name\" [ngClass]=\"[getClass('element', 'control'), getClass('grid', 'control')]\" (blur)=\"onBlur($event)\" (change)=\"onValueChange($event)\" (focus)=\"onFocus($event)\"><mat-radio-button *ngFor=\"let option of model.options$ | async\" [labelPosition]=\"'after'\" [name]=\"model.name\" [ngClass]=\"getClass('element', 'option')\" [value]=\"option.value\"><span [innerHTML]=\"option.label\"></span></mat-radio-button></mat-radio-group><mat-form-field *ngSwitchCase=\"8\" [color]=\"getAdditional('color', 'primary')\" [ngClass]=\"getClass('grid', 'control')\" [floatLabel]=\"getAdditional('floatLabel', 'auto')\"><ng-container *ngIf=\"model.label\" ngProjectAs=\"mat-label\"><mat-label>{{ model.label }}</mat-label></ng-container><span *ngIf=\"model.prefix\" matPrefix [innerHTML]=\"model.prefix\"></span><mat-select #matSelect [formControlName]=\"model.id\" [id]=\"bindId ? model.id : null\" [multiple]=\"model.multiple\" [ngClass]=\"getClass('element', 'control')\" [placeholder]=\"model.placeholder\" [required]=\"model.required\" (change)=\"onValueChange($event)\" (closed)=\"onCustomEvent($event, 'closed')\" (opened)=\"onCustomEvent($event, 'opened')\"><mat-option *ngFor=\"let option of model.options$ | async\" [ngClass]=\"getClass('element', 'option')\" [value]=\"option.value\"><span [innerHTML]=\"option.label\"></span></mat-option></mat-select><span *ngIf=\"model.suffix\" matSuffix [innerHTML]=\"model.suffix\"></span><mat-hint *ngIf=\"showHint\" align=\"start\" [innerHTML]=\"model.hint\"></mat-hint><ng-container *ngFor=\"let message of errorMessages\" ngProjectAs=\"mat-error\"><mat-error *ngIf=\"showErrorMessages\">{{ message }}</mat-error></ng-container></mat-form-field><mat-slider *ngSwitchCase=\"9\" #matSlider [formControlName]=\"model.id\" [id]=\"bindId ? model.id : null\" [invert]=\"getAdditional('invert', false)\" [min]=\"model.min\" [max]=\"model.max\" [ngClass]=\"[getClass('element', 'control'), getClass('grid', 'control')]\" [step]=\"model.step\" [tabIndex]=\"model.tabIndex\" [thumbLabel]=\"getAdditional('thumbLabel', true)\" [tickInterval]=\"getAdditional('tickInterval', 1)\" [vertical]=\"model.vertical\" (change)=\"onValueChange($event)\" (input)=\"onCustomEvent($event, 'input')\"></mat-slider><mat-slide-toggle *ngSwitchCase=\"10\" #matSlideToggle [checked]=\"model.checked\" [formControlName]=\"model.id\" [id]=\"bindId ? model.id : null\" [labelPosition]=\"model.labelPosition || 'after'\" [name]=\"model.name\" [ngClass]=\"[getClass('element','control'), getClass('grid','control')]\" (change)=\"onValueChange($event)\"><span *ngIf=\"!model.checked\" [innerHTML]=\"model.offLabel\"></span> <span *ngIf=\"model.checked\" [innerHTML]=\"model.onLabel\"></span></mat-slide-toggle><mat-form-field *ngSwitchCase=\"11\" [color]=\"getAdditional('color', 'primary')\" [ngClass]=\"getClass('grid', 'control')\" [floatLabel]=\"getAdditional('floatLabel', 'auto')\"><ng-container *ngIf=\"model.label\" ngProjectAs=\"mat-label\"><mat-label>{{ model.label }}</mat-label></ng-container><textarea matInput [cols]=\"model.cols\" [formControlName]=\"model.id\" [id]=\"bindId ? model.id : null\" [maxlength]=\"model.maxLength\" [minlength]=\"model.minLength\" [name]=\"model.name\" [ngClass]=\"getClass('element', 'control')\" [placeholder]=\"model.placeholder\" [readonly]=\"model.readOnly\" [required]=\"model.required\" [rows]=\"model.rows\" [spellcheck]=\"model.spellCheck\" [tabindex]=\"model.tabIndex\" [wrap]=\"model.wrap\" (blur)=\"onBlur($event)\" (change)=\"onValueChange($event)\" (focus)=\"onFocus($event)\"></textarea><mat-hint *ngIf=\"showHint\" align=\"start\" [innerHTML]=\"model.hint\"></mat-hint><mat-hint *ngIf=\"showCharacterHint\" align=\"end\">{{ characterHint }}</mat-hint><ng-container *ngFor=\"let message of errorMessages\" ngProjectAs=\"mat-error\"><mat-error *ngIf=\"hasErrorMessaging\">{{ message }}</mat-error></ng-container></mat-form-field></ng-container><ng-container *ngIf=\"!hasMatFormField && hasErrorMessaging\"><mat-error *ngFor=\"let message of errorMessages\">{{ message }}</mat-error></ng-container><ng-container *ngTemplateOutlet=\"templates[1]?.templateRef; context: model\"></ng-container><ng-content></ng-content></div>"}]}],"members":{"contentTemplateList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren","line":63,"character":5},"arguments":[{"__symbolic":"reference","module":"@ng-dynamic-forms/core","name":"DynamicTemplateDirective","line":63,"character":21}]}]}],"inputTemplateList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":5},"arguments":["templates"]}]}],"bindId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":5}}]}],"context":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":5}}]}],"group":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":68,"character":5}}]}],"hasErrorMessaging":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":5}}]}],"layout":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":70,"character":5}}]}],"model":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":5}}]}],"showCharacterHint":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":5}}]}],"blur":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":82,"character":5},"arguments":["dfBlur"]}]}],"change":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":83,"character":5},"arguments":["dfChange"]}]}],"focus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":84,"character":5},"arguments":["dfFocus"]}]}],"customEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":85,"character":5},"arguments":["matEvent"]}]}],"matViewChild":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":87,"character":5},"arguments":[{"__symbolic":"reference","name":"MAT_VIEW_CHILD_SELECTOR"}]}]}],"matInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":88,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatInput","line":88,"character":15}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":92,"character":45},{"__symbolic":"reference","module":"@ng-dynamic-forms/core","name":"DynamicFormLayoutService","line":92,"character":89},{"__symbolic":"reference","module":"@ng-dynamic-forms/core","name":"DynamicFormValidationService","line":93,"character":45}]}],"ngOnChanges":[{"__symbolic":"method"}],"onChipInputTokenEnd":[{"__symbolic":"method"}],"onChipRemoved":[{"__symbolic":"method"}],"updateFormControlType":[{"__symbolic":"method"}]}},"DynamicFormsMaterialUIModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":20,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":22,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":23,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatAutocompleteModule","line":24,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatCheckboxModule","line":25,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatChipsModule","line":26,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatDatepickerModule","line":27,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":28,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":29,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatRadioModule","line":30,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":31,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSliderModule","line":32,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSlideToggleModule","line":33,"character":8},{"__symbolic":"reference","module":"angular2-text-mask","name":"TextMaskModule","line":34,"character":8},{"__symbolic":"reference","module":"@ng-dynamic-forms/core","name":"DynamicFormsCoreModule","line":35,"character":8}],"declarations":[{"__symbolic":"reference","name":"DynamicMaterialFormControlComponent"},{"__symbolic":"reference","name":"DynamicMaterialFormComponent"}],"exports":[{"__symbolic":"reference","module":"@ng-dynamic-forms/core","name":"DynamicFormsCoreModule","line":42,"character":8},{"__symbolic":"reference","name":"DynamicMaterialFormControlComponent"},{"__symbolic":"reference","name":"DynamicMaterialFormComponent"}]}]}],"members":{}}},"origins":{"DynamicMaterialFormComponent":"./src/dynamic-material-form.component","MatFormControlType":"./src/dynamic-material-form.const","MAT_VIEW_CHILD_SELECTOR":"./src/dynamic-material-form.const","MAT_LABEL_POSITION_AFTER":"./src/dynamic-material-form.const","MAT_LABEL_POSITION_BEFORE":"./src/dynamic-material-form.const","MatFormControlComponent":"./src/dynamic-material-form-control.component","DynamicMaterialFormControlComponent":"./src/dynamic-material-form-control.component","DynamicFormsMaterialUIModule":"./src/dynamic-material-form-ui.module"},"importAs":"@ng-dynamic-forms/ui-material"}